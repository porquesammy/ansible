---
- hosts: all
  become: true
  tasks:
    # Check if the system uses APT package manager
    - name: Check if package manager is apt
      assert:
        that:
          - ansible_pkg_mgr == 'apt'
        fail_msg: "This playbook is only for systems using APT (e.g., Ubuntu, Debian)"
        success_msg: "System uses APT, proceeding with the tasks."

    # Block to install Zsh, Oh My Zsh, preferred plugins, and Powerlevel10k theme (on APT-based systems)
    - name: Perform tasks for APT-based systems
      block:
        # Update the repository cache
        - name: Update repository index
          apt: 
            update_cache: yes
        
        # Upgrade installed packages to the latest versions
        - name: Upgrade installed packages
          apt:
            upgrade: dist  # through upgrade (install new dependencies and delete obsolete packages)
            cache_valid_time: 3600  # Cache is valid for 1 hour
        
        # Install tmux
        - name: Install tmux
          apt: 
            name: tmux
        
        # Install git-all
        - name: Install git
          apt:
            name: git-all
       
        # Install Zsh
        - name: Install zsh
          apt:
            name: zsh
            state: present
        
        # Set Zsh as the default shell for user
        - name: Change user shell to zsh 
          ansible.builtin.user:
            name: "{{ ansible_user_id }}"
            shell: /bin/zsh
    
        # Check if .oh-my-zsh directory exists
        - name: Check if .oh-my-zsh directory exists
          stat:
            path: "{{ ansible_env.HOME }}/.oh-my-zsh"
          register: oh_my_zsh_dir
        
        # Install Oh My Zsh using git (only if not already installed)
        - name: Install Oh My Zsh if not installed
          git:
            repo: 'https://github.com/ohmyzsh/ohmyzsh.git'
            dest: "{{ ansible_env.HOME }}/.oh-my-zsh"
            version: master
            update: yes  # This will pull the latest changes if already installed
          when: not oh_my_zsh_dir.stat.exists
        
        # Ensure Oh My Zsh plugins directory exists
        - name: Ensure oh-my-zsh plugins directory exists
          file:
            path: "{{ ansible_env.HOME }}/.oh-my-zsh/plugins"
            state: directory
            mode: '0755'
        
        # Install the Zsh plugin auto-suggestions
        - name: Install zsh plugin auto-suggestions
          git:
            repo: 'https://github.com/zsh-users/zsh-autosuggestions.git'
            dest: "{{ ansible_env.HOME }}/.oh-my-zsh/plugins/zsh-autosuggestions"
        
        # Install the Zsh plugin auto-complete
        - name: Install zsh plugin auto-complete
          git:
            repo: 'https://github.com/marlonrichert/zsh-autocomplete.git'
            dest: "{{ ansible_env.HOME }}/.oh-my-zsh/plugins/zsh-autocomplete"
        
        # Install the Zsh plugin you-should-use
        - name: Install zsh plugin you-should-use
          git:
            repo: 'https://github.com/MichaelAquilina/zsh-you-should-use.git'
            dest: "{{ ansible_env.HOME }}/.oh-my-zsh/plugins/you-should-use"
        
        # Install Powerlevel10k theme for Zsh
        - name: Install theme powerlevel10k
          git:
            repo: 'https://github.com/romkatv/powerlevel10k.git'
            dest: "{{ ansible_env.HOME }}/.oh-my-zsh/themes/powerlevel10k"

        # Ensure .zshrc exists and add plugins line
        - name: Ensure .zshrc contains plugins line
          lineinfile:
            path: "{{ ansible_env.HOME }}/.zshrc"
            regexp: '^plugins='
            line: 'plugins=(git zsh-autosuggestions zsh-autocomplete you-should-use)'
            create: yes

        # Ensure .zshrc contains the Powerlevel10k theme line
        - name: Ensure .zshrc contains Powerlevel10k theme line
          lineinfile:
            path: "{{ ansible_env.HOME }}/.zshrc"
            regexp: '^ZSH_THEME='
            line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'
            create: yes

        # Ensure .zshrc contains the source line for Oh My Zsh
        - name: Ensure .zshrc contains source line for oh-my-zsh
          lineinfile:
            path: "{{ ansible_env.HOME }}/.zshrc"
            regexp: '^source \$ZSH/oh-my-zsh.sh'
            line: 'source $ZSH/oh-my-zsh.sh'
            create: yes

      when: ansible_pkg_mgr == 'apt'
